{"abi":[{"type":"function","name":"isSupportedChain","inputs":[{"name":"remoteChainSelector","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isSupportedToken","inputs":[{"name":"token","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"lockOrBurn","inputs":[{"name":"lockOrBurnIn","type":"tuple","internalType":"struct Pool.LockOrBurnInV1","components":[{"name":"receiver","type":"bytes","internalType":"bytes"},{"name":"remoteChainSelector","type":"uint64","internalType":"uint64"},{"name":"originalSender","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"localToken","type":"address","internalType":"address"}]}],"outputs":[{"name":"lockOrBurnOut","type":"tuple","internalType":"struct Pool.LockOrBurnOutV1","components":[{"name":"destTokenAddress","type":"bytes","internalType":"bytes"},{"name":"destPoolData","type":"bytes","internalType":"bytes"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"releaseOrMint","inputs":[{"name":"releaseOrMintIn","type":"tuple","internalType":"struct Pool.ReleaseOrMintInV1","components":[{"name":"originalSender","type":"bytes","internalType":"bytes"},{"name":"remoteChainSelector","type":"uint64","internalType":"uint64"},{"name":"receiver","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"localToken","type":"address","internalType":"address"},{"name":"sourcePoolAddress","type":"bytes","internalType":"bytes"},{"name":"sourcePoolData","type":"bytes","internalType":"bytes"},{"name":"offchainTokenData","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"","type":"tuple","internalType":"struct Pool.ReleaseOrMintOutV1","components":[{"name":"destinationAmount","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"isSupportedChain(uint64)":"8926f54f","isSupportedToken(address)":"240028e8","lockOrBurn((bytes,uint64,address,uint256,address))":"9a4575b9","releaseOrMint((bytes,uint64,address,uint256,address,bytes,bytes,bytes))":"39077537","supportsInterface(bytes4)":"01ffc9a7"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"remoteChainSelector\",\"type\":\"uint64\"}],\"name\":\"isSupportedChain\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isSupportedToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"receiver\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"remoteChainSelector\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"originalSender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"localToken\",\"type\":\"address\"}],\"internalType\":\"struct Pool.LockOrBurnInV1\",\"name\":\"lockOrBurnIn\",\"type\":\"tuple\"}],\"name\":\"lockOrBurn\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"destTokenAddress\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"destPoolData\",\"type\":\"bytes\"}],\"internalType\":\"struct Pool.LockOrBurnOutV1\",\"name\":\"lockOrBurnOut\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"originalSender\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"remoteChainSelector\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"localToken\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"sourcePoolAddress\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sourcePoolData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"offchainTokenData\",\"type\":\"bytes\"}],\"internalType\":\"struct Pool.ReleaseOrMintInV1\",\"name\":\"releaseOrMintIn\",\"type\":\"tuple\"}],\"name\":\"releaseOrMint\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"destinationAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct Pool.ReleaseOrMintOutV1\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isSupportedChain(uint64)\":{\"params\":{\"remoteChainSelector\":\"The selector of the remote chain.\"},\"returns\":{\"_0\":\"true if the given chain is a permissioned remote chain.\"}},\"isSupportedToken(address)\":{\"params\":{\"token\":\"The address of the token.\"},\"returns\":{\"_0\":\"true if the token is supported by the pool.\"}},\"lockOrBurn((bytes,uint64,address,uint256,address))\":{\"params\":{\"lockOrBurnIn\":\"Encoded data fields for the processing of tokens on the source chain.\"},\"returns\":{\"lockOrBurnOut\":\"Encoded data fields for the processing of tokens on the destination chain.\"}},\"releaseOrMint((bytes,uint64,address,uint256,address,bytes,bytes,bytes))\":{\"details\":\"The offramp asserts that the balanceOf of the receiver has been incremented by exactly the number of tokens that is returned in ReleaseOrMintOutV1.destinationAmount. If the amounts do not match, the tx reverts.\",\"params\":{\"releaseOrMintIn\":\"All data required to release or mint tokens.\"},\"returns\":{\"_0\":\"releaseOrMintOut The amount of tokens released or minted on the local chain, denominated in the local token's decimals.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isSupportedChain(uint64)\":{\"notice\":\"Checks whether a remote chain is supported in the token pool.\"},\"isSupportedToken(address)\":{\"notice\":\"Returns if the token pool supports the given token.\"},\"lockOrBurn((bytes,uint64,address,uint256,address))\":{\"notice\":\"Lock tokens into the pool or burn the tokens.\"},\"releaseOrMint((bytes,uint64,address,uint256,address,bytes,bytes,bytes))\":{\"notice\":\"Releases or mints tokens to the receiver address.\"}},\"notice\":\"Shared public interface for multiple V1 pool types. Each pool type handles a different child token model e.g. lock/unlock, mint/burn.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/chainlink-local/lib/chainlink-ccip/chains/evm/contracts/interfaces/IPool.sol\":\"IPoolV1\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ccip/contracts/src/v0.8/ccip/=lib/chainlink-local/lib/chainlink-ccip/chains/evm/contracts/\",\":@chainlink-local/=lib/chainlink-local/\",\":@chainlink/contracts-ccip/contracts/libraries/=lib/chainlink-local/lib/chainlink-ccip/chains/evm/contracts/libraries/\",\":@chainlink/contracts-ccip/src/v0.8/ccip/=lib/chainlink-local/lib/chainlink-ccip/chains/evm/contracts/\",\":@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.3/contracts/=lib/chainlink-local/lib/chainlink-evm/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.8.3/contracts/\",\":@chainlink/contracts/=lib/chainlink-local/lib/chainlink-evm/contracts/\",\":@chainlink/local/src/=lib/chainlink-local/src/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ccip/=lib/ccip/contracts/\",\":chainlink-ccip/=lib/chainlink-local/lib/chainlink-ccip/\",\":chainlink-evm/=lib/chainlink-local/lib/chainlink-evm/\",\":chainlink-local/=lib/chainlink-local/src/\",\":ds-test/=lib/ccip/contracts/foundry-lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/chainlink-local/lib/chainlink-ccip/chains/evm/contracts/interfaces/IPool.sol\":{\"keccak256\":\"0x827dc5951b39392fbe00ba9287b0da9d9b7cf2bbfb5ed0fc0209961515a3ee83\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f5a76c9f646df6330d9362f7080352adff78bb53ab6fbd2ed4d7f786aa85fbb\",\"dweb:/ipfs/QmXM52v9RWDfbZHCN8aDqLg7DAgi1uWCv64LuPcuqh512U\"]},\"lib/chainlink-local/lib/chainlink-ccip/chains/evm/contracts/libraries/Pool.sol\":{\"keccak256\":\"0x795db4ae4ea097b66bf834c3de5a903c3b3d4c7e943f479931d4e92ea13d8862\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c85bf9a40aed741facb145cf9177b312d328b50f0f842a68e922c0a7fd374fb1\",\"dweb:/ipfs/QmTibKndcGQDTCmH4q3yCU5dqnCsHdTagiSxUmBFpcDb3s\"]},\"lib/chainlink-local/lib/chainlink-evm/contracts/src/v0.8/vendor/openzeppelin-solidity/v5.0.2/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint64","name":"remoteChainSelector","type":"uint64"}],"stateMutability":"view","type":"function","name":"isSupportedChain","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"stateMutability":"view","type":"function","name":"isSupportedToken","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"struct Pool.LockOrBurnInV1","name":"lockOrBurnIn","type":"tuple","components":[{"internalType":"bytes","name":"receiver","type":"bytes"},{"internalType":"uint64","name":"remoteChainSelector","type":"uint64"},{"internalType":"address","name":"originalSender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"localToken","type":"address"}]}],"stateMutability":"nonpayable","type":"function","name":"lockOrBurn","outputs":[{"internalType":"struct Pool.LockOrBurnOutV1","name":"lockOrBurnOut","type":"tuple","components":[{"internalType":"bytes","name":"destTokenAddress","type":"bytes"},{"internalType":"bytes","name":"destPoolData","type":"bytes"}]}]},{"inputs":[{"internalType":"struct Pool.ReleaseOrMintInV1","name":"releaseOrMintIn","type":"tuple","components":[{"internalType":"bytes","name":"originalSender","type":"bytes"},{"internalType":"uint64","name":"remoteChainSelector","type":"uint64"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"localToken","type":"address"},{"internalType":"bytes","name":"sourcePoolAddress","type":"bytes"},{"internalType":"bytes","name":"sourcePoolData","type":"bytes"},{"internalType":"bytes","name":"offchainTokenData","type":"bytes"}]}],"stateMutability":"nonpayable","type":"function","name":"releaseOrMint","outputs":[{"internalType":"struct Pool.ReleaseOrMintOutV1","name":"","type":"tuple","components":[{"internalType":"uint256","name":"destinationAmount","type":"uint256"}]}]},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"stateMutability":"view","type":"function","name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"isSupportedChain(uint64)":{"params":{"remoteChainSelector":"The selector of the remote chain."},"returns":{"_0":"true if the given chain is a permissioned remote chain."}},"isSupportedToken(address)":{"params":{"token":"The address of the token."},"returns":{"_0":"true if the token is supported by the pool."}},"lockOrBurn((bytes,uint64,address,uint256,address))":{"params":{"lockOrBurnIn":"Encoded data fields for the processing of tokens on the source chain."},"returns":{"lockOrBurnOut":"Encoded data fields for the processing of tokens on the destination chain."}},"releaseOrMint((bytes,uint64,address,uint256,address,bytes,bytes,bytes))":{"details":"The offramp asserts that the balanceOf of the receiver has been incremented by exactly the number of tokens that is returned in ReleaseOrMintOutV1.destinationAmount. If the amounts do not match, the tx reverts.","params":{"releaseOrMintIn":"All data required to release or mint tokens."},"returns":{"_0":"releaseOrMintOut The amount of tokens released or minted on the local chain, denominated in the local token's decimals."}},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"userdoc":{"kind":"user","methods":{"isSupportedChain(uint64)":{"notice":"Checks whether a remote chain is supported in the token pool."},"isSupportedToken(address)":{"notice":"Returns if the token pool supports the given token."},"lockOrBurn((bytes,uint64,address,uint256,address))":{"notice":"Lock tokens into the pool or burn the tokens."},"releaseOrMint((bytes,uint64,address,uint256,address,bytes,bytes,bytes))":{"notice":"Releases or mints tokens to the receiver address."}},"version":1}},"settings":{"remappings":["@ccip/contracts/src/v0.8/ccip/=lib/chainlink-local/lib/chainlink-ccip/chains/evm/contracts/","@chainlink-local/=lib/chainlink-local/","@chainlink/contracts-ccip/contracts/libraries/=lib/chainlink-local/lib/chainlink-ccip/chains/evm/contracts/libraries/","@chainlink/contracts-ccip/src/v0.8/ccip/=lib/chainlink-local/lib/chainlink-ccip/chains/evm/contracts/","@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.3/contracts/=lib/chainlink-local/lib/chainlink-evm/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.8.3/contracts/","@chainlink/contracts/=lib/chainlink-local/lib/chainlink-evm/contracts/","@chainlink/local/src/=lib/chainlink-local/src/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ccip/=lib/ccip/contracts/","chainlink-ccip/=lib/chainlink-local/lib/chainlink-ccip/","chainlink-evm/=lib/chainlink-local/lib/chainlink-evm/","chainlink-local/=lib/chainlink-local/src/","ds-test/=lib/ccip/contracts/foundry-lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/chainlink-local/lib/chainlink-ccip/chains/evm/contracts/interfaces/IPool.sol":"IPoolV1"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/chainlink-local/lib/chainlink-ccip/chains/evm/contracts/interfaces/IPool.sol":{"keccak256":"0x827dc5951b39392fbe00ba9287b0da9d9b7cf2bbfb5ed0fc0209961515a3ee83","urls":["bzz-raw://1f5a76c9f646df6330d9362f7080352adff78bb53ab6fbd2ed4d7f786aa85fbb","dweb:/ipfs/QmXM52v9RWDfbZHCN8aDqLg7DAgi1uWCv64LuPcuqh512U"],"license":"MIT"},"lib/chainlink-local/lib/chainlink-ccip/chains/evm/contracts/libraries/Pool.sol":{"keccak256":"0x795db4ae4ea097b66bf834c3de5a903c3b3d4c7e943f479931d4e92ea13d8862","urls":["bzz-raw://c85bf9a40aed741facb145cf9177b312d328b50f0f842a68e922c0a7fd374fb1","dweb:/ipfs/QmTibKndcGQDTCmH4q3yCU5dqnCsHdTagiSxUmBFpcDb3s"],"license":"MIT"},"lib/chainlink-local/lib/chainlink-evm/contracts/src/v0.8/vendor/openzeppelin-solidity/v5.0.2/contracts/utils/introspection/IERC165.sol":{"keccak256":"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b","urls":["bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df","dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"],"license":"MIT"}},"version":1},"id":2}